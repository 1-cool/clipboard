#include "stdio.h"
#include "windows.h"

//将字符串放到剪切板
int AppendBufferToClipboard( char *cBuffer, int nSize )
{
	HGLOBAL hClipboard = NULL;
	char *pClipBuf = NULL;

	if( OpenClipboard( NULL ) )
	{ 
		hClipboard = GlobalAlloc( GMEM_DDESHARE, nSize+1 );
		pClipBuf = (char*)GlobalLock(hClipboard);
		memset( pClipBuf, 0, nSize+1 );
		memcpy( pClipBuf, cBuffer, nSize );
		GlobalUnlock( hClipboard );
		SetClipboardData( CF_TEXT, hClipboard );
		CloseClipboard();
	}
	else
	{
		return -1;
	}

	return 0;
}

//从剪切板获取字符串
int GetBufferFromClipboard( char *cBuffer, int nMaxSize )
{
	int nNeedSize = 0;
	HANDLE hClipboard = NULL;
	char *pClipBuf = NULL;

	if ( OpenClipboard( NULL ) )
	{
		hClipboard = GetClipboardData( CF_TEXT );
		nNeedSize = GlobalSize( hClipboard );
		if ( nNeedSize > nMaxSize+1 )
		{
			return -1;
		}

		pClipBuf = (char*)GlobalLock( hClipboard );
		memset( cBuffer, 0, nMaxSize );
		memcpy( cBuffer, pClipBuf, nNeedSize );
		GlobalUnlock( hClipboard );
		CloseClipboard();

		return nNeedSize;

	}
	else
	{
		return 0;
	}

	return -1;
}

//清空剪切板
int ClearClipboradBuffer()
{
	HGLOBAL hClipboard = NULL;

	if( OpenClipboard( NULL ) )
	{ 
		hClipboard = GetClipboardData( CF_TEXT );
		GlobalFree( hClipboard );
		EmptyClipboard();
		CloseClipboard();
		return 0;
	}
	else
	{
		return -1;
	}
}

int main( int argc, char *argv[] )
{
	char cTest[ 512 ]={ 0 };
	char cClip[ 512 ] = { 0 };
	int nRet = 0;

	nRet = sprintf( cTest, "argc = %d, path = %s", argc, argv[0] );
	printf( "%s \n", cTest );
	ClearClipboradBuffer();

	if( AppendBufferToClipboard( cTest, nRet ) )
	{
		printf( "Failed append buffer to clipboard. \n" );
		return 0;
	}

	printf( "Now open notepad and press Ctrl + V to show buffer in clipboard.\n" );
	printf( "And press any key to exit.\n" );

	getchar();

	nRet = GetBufferFromClipboard( cClip, 512 );
	printf( "Get Buffer From Clipboard, nRet = %d, buf = %s \n", nRet, cClip );

	ClearClipboradBuffer();

	nRet = GetBufferFromClipboard( cClip, 512 );
	printf( "Get Buffer From Clipboard again, nRet = %d, buf = %s \n", nRet, cClip );

	return 0;
}
